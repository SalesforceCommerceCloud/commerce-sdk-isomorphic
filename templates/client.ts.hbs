import ClientConfig, { ClientConfigInit } from "./clientConfig";
import TemplateURL from "./templateUrl";
import { fetch, Request }  from "cross-fetch";
import type { PathParameters, QueryParameters, UrlParameters } from "./commonParameters";

{{#each dataTypes}}
    {{#if (or (isTypeDefinition this) (isArrayType this))}}
export type {{getValue name}} = {{> dtoPartial typeDto=this}}
    {{/if}}
{{/each}}

/**
* [{{{metadata.name}}}](https://developer.commercecloud.com/s/api-details/{{{getObjectIdByAssetId metadata.assetId}}})
* ==================================
*
* *{{metadata.description}}*<br />
*
* Simple example:
*
* ```typescript
*   import { {{name.upperCamelCase}} } from "commerce-sdk-isomorphic";
*
*   const clientConfig = {
*     parameters: {
*       clientId: "XXXXXX",
*       organizationId: "XXXX",
*       shortCode: "XXX",
*       siteId: "XX"
*     }
*   };
*   const {{name.lowerCamelCase}}Client = new {{name.upperCamelCase}}(clientConfig);
* ```
*
* <span style="font-size:.7em; display:block; text-align: right">
* API Version: {{metadata.version}}<br />
* Last Updated: {{metadata.updatedDate}}<br />  
* </span>
{{#if (eq (lowercase metadata.categories.[CC Version Status].[0]) "beta")}}
* @beta 
* {{/if}}
* 

*/
export class {{name.upperCamelCase}} {
  public clientConfig: ClientConfig;

  static readonly defaultBaseUri = "{{getBaseUriFromDocument model}}";

  constructor(config?: ClientConfigInit) {
    this.clientConfig = new ClientConfig({
      baseUri: new.target.defaultBaseUri,
      ...config
    });
  }

  {{> operationsPartial model}}

}
