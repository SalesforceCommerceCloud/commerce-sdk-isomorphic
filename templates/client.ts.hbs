import ClientConfig, { ClientConfigInit } from "./clientConfig";
import {USER_AGENT_HEADER, USER_AGENT_VALUE} from "./version";

import TemplateURL from "./templateUrl";
import { fetch, Request }  from "cross-fetch";
import type { PathParameters, QueryParameters } from "./commonParameters";

{{#each dataTypes}}
  {{!-- TODO: Remove this special case handling once namespaced types are added --}}
  {{#if (eq (getValue name) "ResourceBadRequest")}}
// This is a known deviation from the RAML definition, required due to limitations in
// the SDK generation. The full definition will be included in the next major release.
export type ResourceBadRequest = { [key: string]: any };
  {{else if (or (isTypeDefinition this) (isArrayType this))}}
export type {{getValue name}} = {{> dtoPartial typeDto=this}}
  {{/if}}
  {{!-- There exists both a type `RangeFilter` and a trait `RangeFilter` in
  some APIs. This causes a name collision bug where the type is not included
  in the generated file. The bug was incorrectly "fixed" by including traits
  as types. They are not types, and will eventually be removed. --}}
  {{#if (isTraitDefinition this)}}
    {{#if (isAllowedTrait this) }}
    {{!-- Because we know that a trait "type" is either (a) unused or (b) replacing
    a real type whose definition we have lost, we don't want to be restrictive --}}
type {{getValue name}} = { [key: string]: any }
    {{else}}
      {{log "Cannot convert invalid trait to type:" (getValue name) lavel="warn"}}
    {{/if}}
  {{/if}}
{{/each}}

/**
* [{{{metadata.name}}}](https://developer.commercecloud.com/s/api-details/{{{getObjectIdByAssetId metadata.assetId}}})
* ==================================
*
* *{{metadata.description}}*<br />
*
* Simple example:
*
* ```typescript
*   import { {{name.upperCamelCase}} } from "commerce-sdk-isomorphic";
*
*   const clientConfig = {
*     parameters: {
*       clientId: "XXXXXX",
*       organizationId: "XXXX",
*       shortCode: "XXX",
*       siteId: "XX"
*     }
*   };
*   const {{name.lowerCamelCase}}Client = new {{name.upperCamelCase}}(clientConfig);
* ```
*
* <span style="font-size:.7em; display:block; text-align: right">
* API Version: {{metadata.version}}<br />
* Last Updated: {{metadata.updatedDate}}<br />  
* </span>
{{#if (eq (lowercase metadata.categories.[CC Version Status].[0]) "beta")}}
* @beta 
* {{/if}}
* 

*/
export class {{name.upperCamelCase}} {
  public clientConfig: ClientConfig;

  static readonly defaultBaseUri = "{{getBaseUriFromDocument model}}";

  constructor(config?: ClientConfigInit) {
    this.clientConfig = new ClientConfig({
      baseUri: new.target.defaultBaseUri,
      ...config
    });
  }

  {{> operationsPartial model}}

}
