openapi: 3.0.3
info:
  x-api-type: Shopper
  x-api-family: Experience
  title: Shopper Experience
  version: 1.1.0
  description: |-
    [Download API specification](https://developer.salesforce.com/static/commercecloud/commerce-api/shopper-experience/shopper-experience-oas-v1-public.yaml)

    # API Overview
    Use the Shopper Experience API to look up page information for pages that are created in Page Designer, content assets and to access content folders.

    ## Pages
    Responses for pages include the following:

    - The entire component hierarchy of the page at design time.
    - All merchant data provided at design time.
    - Server-side scripting data provided at run time.

    Both the page and components contain the values of all native and custom attributes that have been populated during page authoring.

    Only visible pages are returned. Because the visibility of components is driven by rules (scheduling or customer groups, for example), these rules are subject to evaluation when assembling the component hierarchy in the response. Only components that are visible for the current customer context appear in the response. The same rules apply to the page itself, which is only be processed and returned if it is visible.

    ## Content Assets

    Content asset responses include:

    - Rich content including text, HTML, and images
    - SEO metadata (title, description, keywords)
    - Template information for rendering
    - Folder organization structure
    - Custom attributes and properties

    Only content assets that are marked as online are returned. Content assets provide flexible content management capabilities for storefronts.

    ## Content Folders
    The API also provides access to content folders, which are used to organize and manage content assets. Content folders support:

    - Hierarchical organization with nested subfolders
    - Localized metadata including names, descriptions, and SEO attributes
    - Custom attributes for extended functionality
    - Configurable depth levels for subfolder retrieval (0, 1, or 2 levels)

    Only content folders that are marked as online are returned in the API responses.

    ## Authentication & Authorization

    The Shopper Experience API requires a shopper access token from the Shopper Login and API Access Service (SLAS).

    For details on how to request a shopper access token from SLAS, see the guest user flows for [public clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-public-client.html#guest-user) and [private clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-private-client.html#guest-user) in the SLAS guides.

    You must include the relevant scope(s) in the client ID used to generate the SLAS token. For details, see the [Authorization Scopes Catalog.](https://developer.salesforce.com/docs/commerce/commerce-api/guide/auth-z-scope-catalog.html).

    **Important**: Currently, the Shopper Experience Pages endpoints canâ€™t be used when the [storefront password protection](https://documentation.b2c.commercecloud.salesforce.com/DOC1/index.jsp?topic=%2Fcom.demandware.dochelp%2Fcontent%2Fb2c_commerce%2Ftopics%2Fpermissions%2Fb2c_storefront_password_protection.html&resultof=%22%73%74%6f%72%65%66%72%6f%6e%74%22%20%22%70%72%6f%74%65%63%74%69%6f%6e%22%20%22%70%72%6f%74%65%63%74%22%20) feature is enabled.
servers:
  - url: https://{shortCode}.api.commercecloud.salesforce.com/experience/shopper-experience/v1
    variables:
      shortCode:
        default: shortCode
paths:
  /organizations/{organizationId}/pages:
    get:
      summary: Get Page Designer pages.
      description: "Get Page Designer pages. The results apply the visibility rules for each page's components, such as personalization or scheduled visibility.\n\nYou must provide the `aspectTypeId` along with either a `categoryId` or a `productId`. Since you can only create one page-to-product or page-to-category assignment per aspect type, the result contains at most one element.\n\n**Important**: \n- Currently, you can't use the Shopper Experience Pages endpoints when the [storefront password protection](https://documentation.b2c.commercecloud.salesforce.com/DOC1/index.jsp?topic=%2Fcom.demandware.dochelp%2Fcontent%2Fb2c_commerce%2Ftopics%2Fpermissions%2Fb2c_storefront_password_protection.html&resultof=%22%73%74%6f%72%65%66%72%6f%6e%74%22%20%22%70%72%6f%74%65%63%74%69%6f%6e%22%20%22%70%72%6f%74%65%63%74%22%20) feature is enabled.\n- Because this resource uses the GET method, you must not pass sensitive data, for example: payment card information, and must not perform transactional processes within the server-side scripts that are run for the page and components.\n- Be aware that pagecache during fingerprint calculation will only be leveraged for pages and their components that don't use visibility rules. Furthermore the pagecaching of the actual response assembly solely depends on the response instrumentation with the serverside page type and component type script implementations. For more details also see the [Page Designer Caching Guide](https://developer.salesforce.com/docs/commerce/b2c-commerce/guide/b2c-dev-for-page-designer.html#page-caching)."
      operationId: getPages
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/categoryId'
        - $ref: '#/components/parameters/productId'
        - $ref: '#/components/parameters/aspectTypeId'
        - $ref: '#/components/parameters/aspectAttributes'
        - $ref: '#/components/parameters/parameters'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResult'
              examples:
                PageResult:
                  $ref: '#/components/examples/PageResult'
        '400':
          description: |
            Business Object ID Invalid
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BusinessObjectIDInvalid:
                  $ref: '#/components/examples/BusinessObjectIDInvalid'
        '404':
          description: |
            Requested Aspect Type Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                AspectTypeNotFound:
                  $ref: '#/components/examples/AspectTypeNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-experience
            - sfcc.shopper-experience.pages
  /organizations/{organizationId}/pages/{pageId}:
    get:
      summary: Get a Page Designer page based on a single page ID.
      description: "Get a Page Designer page for a specific page ID. The results apply the visibility rules for the page's components, such as personalization or scheduled visibility.\n\n**Important**: \n- Currently, you can't use the Shopper Experience Pages endpoints when the [storefront password protection](https://documentation.b2c.commercecloud.salesforce.com/DOC1/index.jsp?topic=%2Fcom.demandware.dochelp%2Fcontent%2Fb2c_commerce%2Ftopics%2Fpermissions%2Fb2c_storefront_password_protection.html&resultof=%22%73%74%6f%72%65%66%72%6f%6e%74%22%20%22%70%72%6f%74%65%63%74%69%6f%6e%22%20%22%70%72%6f%74%65%63%74%22%20) feature is enabled.\n- Because this resource uses the GET method, you must not pass sensitive data, for example: payment card information, and must not perform transactional processes within the server-side scripts that are run for the page and components.\n- Be aware that pagecache during fingerprint calculation will only be leveraged for pages and their components that don't use visibility rules. Furthermore the pagecaching of the actual response assembly solely depends on the response instrumentation with the serverside page type and component type script implementations. For more details also see the [Page Designer Caching Guide](https://developer.salesforce.com/docs/commerce/b2c-commerce/guide/b2c-dev-for-page-designer.html#page-caching)."
      operationId: getPage
      parameters:
        - $ref: '#/components/parameters/pageId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/aspectAttributes'
        - $ref: '#/components/parameters/parameters'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
              examples:
                Page:
                  $ref: '#/components/examples/Page'
        '400':
          description: |
            Invalid Query Parameter
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                AspectAttributeInvalid:
                  $ref: '#/components/examples/AspectAttributeInvalid'
        '401':
          description: |
            Unauthorized Access
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: |
            Requested Page Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                PageNotFound:
                  $ref: '#/components/examples/PageNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-experience
            - sfcc.shopper-experience.pages
  /organizations/{organizationId}/contents/{id}:
    get:
      summary: Get a content asset by ID.
      description: "Get a content asset by its unique identifier. Only content assets that are marked as online are returned.\n\nContent assets contain rich content that can be displayed on storefronts, including text, HTML, images, and custom attributes.\n\n**Important**: \n- Because this resource uses the GET method, you must not pass sensitive data and must not perform transactional processes."
      operationId: getContent
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/contentId'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
              examples:
                Content:
                  $ref: '#/components/examples/Content'
        '404':
          description: |
            Content Asset Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ContentNotFound:
                  $ref: '#/components/examples/ContentNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-experience.contents
  /organizations/{organizationId}/contents:
    get:
      summary: Get multiple content assets.
      description: "Get multiple content assets by their identifiers. Only content assets that are marked as online are returned.\n\nThis endpoint allows you to retrieve multiple content assets in a single request, which is more efficient than making multiple individual requests.\n\n**Important**: \n- Because this resource uses the GET method, you must not pass sensitive data and must not perform transactional processes."
      operationId: getMultipleContent
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/contentIds'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResult'
              examples:
                ContentResult:
                  $ref: '#/components/examples/ContentResult'
        '400':
          description: |
            Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                GetContentsBadRequest:
                  $ref: '#/components/examples/GetContentsBadRequest'
      security:
        - ShopperToken:
            - sfcc.shopper-experience.contents
  /organizations/{organizationId}/content-search:
    get:
      summary: Search for content assets.
      description: "Provides keyword and refinement search functionality for content assets. The search result contains only content\nthat is online and assigned to a folder.\n\n**Refinement Parameters:**\nThe following system refinement attribute IDs are supported:\n- `fdid`: Allows refinement per single content folder ID. Multiple folder IDs are not supported.\n\n**Important**: \n- Because this resource uses the GET method, you must not pass sensitive data and must not perform transactional processes."
      operationId: searchContent
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/contentSearchQuery'
        - $ref: '#/components/parameters/contentSearchRefine'
        - $ref: '#/components/parameters/contentSearchSort'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 50
            maximum: 200
          description: Maximum records to retrieve per request, not to exceed 200. Defaults to 50.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 0
            minimum: 0
          description: Used to retrieve the results based on a particular resource offset.
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSearchResult'
              examples:
                ContentSearchResult:
                  $ref: '#/components/examples/ContentSearchResult'
        '400':
          description: |
            Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ContentSearchBadRequest:
                  $ref: '#/components/examples/ContentSearchBadRequest'
      security:
        - ShopperToken:
            - sfcc.shopper-experience.contents
  /organizations/{organizationId}/folders/{id}:
    get:
      summary: Get content folder
      description: "To access a content folder, you construct a URL using the template shown below. \nThis template requires you to specify a content folder id and a subfolder level. \nIn response, the server returns a corresponding content folder document. \nOnly content folders which are marked as online are returned."
      operationId: getContentFolder
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/folderId'
        - $ref: '#/components/parameters/levels'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentFolder'
              examples:
                ContentFolder:
                  $ref: '#/components/examples/ContentFolder'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InvalidLevelsParameter:
                  $ref: '#/components/examples/InvalidLevelsParameter'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
        '404':
          description: Folder Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ContentFolderNotFound:
                  $ref: '#/components/examples/ContentFolderNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-experience.folders
  /organizations/{organizationId}/folders:
    get:
      summary: Get multiple content folders
      description: "To access one or more content folders, you construct a URL using the template shown below. \nThis template requires you to specify one or more content folder ids as a query parameter and a subfolder level. \nIn response, the server returns a result set of corresponding content folder documents. \nOnly content folders which are marked as online are returned."
      operationId: getContentFolders
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/folderIds'
        - $ref: '#/components/parameters/levels'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentFolderResult'
              examples:
                ContentFolderResult:
                  $ref: '#/components/examples/ContentFolderResult'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InvalidLevelsParameter:
                  $ref: '#/components/examples/InvalidLevelsParameter'
        '401':
          $ref: '#/components/responses/401unauthorized'
        '403':
          $ref: '#/components/responses/403forbidden'
      security:
        - ShopperToken:
            - sfcc.shopper-experience.folders
components:
  securitySchemes:
    ShopperToken:
      type: oauth2
      description: "ShopperToken authentication follows the authorization code grant flow, as defined by the OAuth 2.1 standard. Depending on the type of OAuth client (public or private), this authorization flow has further requirements. \nFor a detailed description of the authorization flow, see the [SLAS overview](https://developer.salesforce.com/docs/commerce/commerce-api/references?meta=shopper-login:Summary).\nA shopper token allows you to access the Shopper API endpoints of both OCAPI and the B2C Commerce API. These endpoints can be used to build headless storefronts and other applications.\nThe `ShopperToken` security scheme is a parent of other security schemes, such as `ShopperTokenTsob`. A Shopper API endpoint can require a specific child scheme (`ShopperTokenTsob`, for example) that cannot be accessed with a regular shopper token.\n"
      flows:
        clientCredentials:
          tokenUrl: https://{shortCode}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-experience: Shopper Experience scope READONLY
            sfcc.shopper-experience.pages: Shopper Experience scope READONLY for pages
            sfcc.shopper-experience.contents: Shopper Experience scope READONLY for contents
            sfcc.shopper-experience.folders: Shopper Experience scope READONLY for folders
        authorizationCode:
          authorizationUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/authorize
          tokenUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-experience: Shopper Experience scope READONLY
            sfcc.shopper-experience.pages: Shopper Experience scope READONLY for pages
            sfcc.shopper-experience.contents: Shopper Experience scope READONLY for contents
            sfcc.shopper-experience.folders: Shopper Experience scope READONLY for folders
  schemas:
    OrganizationId:
      description: An identifier for the organization the request is being made by
      example: f_ecom_zzxy_prd
      type: string
      minLength: 1
      maxLength: 32
    SiteId:
      minLength: 1
      maxLength: 32
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites
      example: RefArch
      type: string
    LanguageCountry:
      pattern: ^[a-z][a-z]-[A-Z][A-Z]$
      description: A concatenated version of the standard Language and Country codes, combined with a hyphen '`-`'.
      example: en-US
      type: string
    LanguageCode:
      pattern: ^[a-z][a-z]$
      description: A two letter lowercase language code conforming to the [ISO 639-1](https://www.iso.org/iso-639-language-codes.html) standard. Additionally, this may be used to submit requests with the header parameter `Accept-Language`, following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766).
      example: en
      type: string
    DefaultFallback:
      default: default
      description: A specialized value indicating the system default values for locales.
      example: default
      enum:
        - default
      type: string
    LocaleCode:
      description: A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.
      oneOf:
        - $ref: '#/components/schemas/LanguageCountry'
        - $ref: '#/components/schemas/LanguageCode'
        - $ref: '#/components/schemas/DefaultFallback'
    Region:
      properties:
        id:
          maxLength: 256
          title: ID
          description: Region identifier.
          example: header
          type: string
        components:
          title: Components
          description: The components in the region.
          example:
            - id: iofwj38fhw3f
              typeId: commerce_assets.banner
              data:
                title: Products On Sale
                bannerImage: sale/topsellerPromo.jpg
              custom:
                thumbnail_full: http://static.myshop.com/sale/topsellerPromo.jpg
          type: array
          items:
            $ref: '#/components/schemas/Component'
      required:
        - id
      type: object
    Component:
      properties:
        id:
          maxLength: 256
          title: ID
          description: Component identifier.
          example: rfdvj4ojtltljw3
          type: string
        typeId:
          maxLength: 256
          title: Component Type ID
          description: Component type identifier.
          example: commerce_assets.carousel
          type: string
        data:
          title: Component Data
          description: The configuration data assigned to the component.
          example:
            title: Topseller
            category: topseller
          type: object
          additionalProperties: false
        custom:
          title: Custom Component Data
          description: Any custom data added by the custom code for this component.
          example:
            detailUrl: www.myshop.com/topseller
          type: object
          additionalProperties: false
        regions:
          title: Regions
          description: The regions (and their assigned components) for the component.
          example:
            - id: tiles
              components:
                - id: w3reÃ¶9wsjf3
                  typeId: commerce_assets.productTile
                  data:
                    product: iphone6
                - id: cgn8d4ngdl4n
                  typeId: commerce_assets.productTile
                  data:
                    product: iphone7
          type: array
          items:
            $ref: '#/components/schemas/Region'
      required:
        - id
        - typeId
      type: object
    Page:
      properties:
        id:
          maxLength: 256
          title: ID
          description: Page identifier.
          example: homepage
          type: string
        typeId:
          maxLength: 256
          title: Page Type ID
          description: Page type identifier.
          example: storePage
          type: string
        aspectTypeId:
          maxLength: 256
          title: Aspect Type ID
          description: The aspect type assigned to the page.
          example: pdpAspect
          type: string
        name:
          maxLength: 4000
          title: Page Name
          description: Display name of the page.
          example: Homepage
          type: string
        description:
          maxLength: 4000
          title: Page Description
          description: Description of the page.
          example: Home page of the storefront.
          type: string
        pageTitle:
          maxLength: 4000
          title: SEO Title
          description: The SEO title of the page.
          example: Homepage - My Shop
          type: string
        pageDescription:
          maxLength: 4000
          title: SEO Description
          description: The SEO description of the page.
          example: Get started shopping
          type: string
        pageKeywords:
          maxLength: 4000
          title: SEO Keywords
          description: The SEO keywords of the page.
          example: fashion, my shop
          type: string
        data:
          title: Page Data
          description: The configuration data assigned to the page.
          example:
            thumbnail: myshop.jpg
          type: object
          additionalProperties: false
        custom:
          title: Custom Page Data
          description: Any custom data added by the custom code for the page type.
          example:
            thumbnail_full: http://static.myshop.com/myshop.jpg
          type: object
          additionalProperties: false
        regions:
          title: Regions
          description: The regions (and their assigned components) for the page.
          example:
            - id: header
              components:
                - id: iofwj38fhw3f
                  typeId: commerce_assets.banner
                  data:
                    title: Products On Sale
                    bannerImage: sale/topsellerPromo.jpg
                  custom:
                    thumbnail_full: http://static.myshop.com/sale/topsellerPromo.jpg
            - id: main
              components:
                - id: rfdvj4ojtltljw3
                  typeId: commerce_assets.carousel
                  data:
                    title: Topseller
                    category: topseller
                  custom:
                    detailUrl: www.myshop.com/topseller
                  regions:
                    - id: tiles
                      components:
                        - id: w3reÃ¶9wsjf3
                          typeId: commerce_assets.productTile
                          data:
                            product: iphone6
                        - id: cgn8d4ngdl4n
                          typeId: commerce_assets.productTile
                          data:
                            product: iphone7
            - id: footer
              components: []
          type: array
          items:
            $ref: '#/components/schemas/Region'
      required:
        - id
        - typeId
      type: object
    PageResult:
      properties:
        data:
          title: Data
          description: List of pages.
          type: array
          items:
            $ref: '#/components/schemas/Page'
      required:
        - data
      type: object
    ErrorResponse:
      type: object
      additionalProperties: true
      properties:
        title:
          description: "A short, human-readable summary of the problem\ntype.  It will not change from occurrence to occurrence of the \nproblem, except for purposes of localization\n"
          type: string
          maxLength: 256
          example: You do not have enough credit
        type:
          description: |
            A URI reference [RFC3986] that identifies the
            problem type.  This specification encourages that, when
            dereferenced, it provide human-readable documentation for the
            problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
            this member is not present, its value is assumed to be
            "about:blank". It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: NotEnoughMoney
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          example: Your current balance is 30, but that costs 50
        instance:
          description: |
            A URI reference that identifies the specific
            occurrence of the problem.  It may or may not yield further
            information if dereferenced.  It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: /account/12345/msgs/abc
      required:
        - title
        - type
        - detail
    ContentId:
      maxLength: 256
      minLength: 1
      description: The id of the content asset.
      example: homepage-banner
      type: string
    Content:
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        id:
          title: ID
          allOf:
            - $ref: '#/components/schemas/ContentId'
        name:
          title: Name
          description: The localized content asset name.
          type: string
          maxLength: 4000
          example: Homepage Banner
        description:
          title: Description
          description: The localized content asset description.
          type: string
          maxLength: 4000
          example: Main banner displayed on the homepage
        pageDescription:
          title: Page Description
          description: The localized content asset page description for SEO.
          type: string
          maxLength: 4000
          example: Discover our latest products and offers
        pageKeywords:
          title: Page Keywords
          description: The localized content asset page keywords for SEO.
          type: string
          maxLength: 4000
          example: products, offers, sale, fashion
        pageTitle:
          title: Page Title
          description: The localized content asset page title for SEO
          type: string
          maxLength: 4000
          example: Shop Now - Best Deals
      required:
        - id
      type: object
    Limit:
      default: 10
      minimum: 1
      format: int32
      description: Maximum records to retrieve per request, not to exceed the maximum defined. A limit must be at least 1 so at least one record is returned (if any match the criteria).
      type: integer
      example: 10
    Total:
      default: 0
      minimum: 0
      format: int32
      description: The total number of hits that match the search's criteria. This can be greater than the number of results returned as search results are pagenated.
      type: integer
      example: 10
    ResultBase:
      description: "Schema defining generic list result. Each response schema of a resource requiring a list response should extend this schema. \nAdditionally it needs to be defined what data is returned."
      type: object
      required:
        - limit
        - total
      properties:
        limit:
          maximum: 200
          allOf:
            - $ref: '#/components/schemas/Limit'
        total:
          $ref: '#/components/schemas/Total'
    ContentResult:
      allOf:
        - $ref: '#/components/schemas/ResultBase'
      properties:
        data:
          title: Data
          description: List of content assets.
          type: array
          items:
            $ref: '#/components/schemas/Content'
      required:
        - data
      type: object
    Offset:
      default: 0
      minimum: 0
      format: int32
      description: The zero-based index of the first hit/data to include in the result.
      type: integer
      example: 0
    PaginatedResultBase:
      description: "Schema defining generic pageable result. Each response schema of a resource requiring pagination should extend this schema. \nIf you use this extend this schema directly, it needs to be defined what data is returned. Allowed names for the data field is `data`."
      type: object
      allOf:
        - $ref: '#/components/schemas/ResultBase'
      properties:
        offset:
          $ref: '#/components/schemas/Offset'
      required:
        - limit
        - offset
        - total
    ContentSearchRefinementValue:
      properties:
        label:
          title: Label
          description: The localized label of the refinement value.
          type: string
          maxLength: 4000
          example: Banner
        value:
          title: Value
          description: The refinement value.
          type: string
          maxLength: 256
          example: banner
        hitCount:
          title: Hit Count
          description: The number of search hits when this refinement value is applied.
          type: integer
          minimum: 0
          example: 5
      required:
        - value
      type: object
    ContentSearchRefinement:
      properties:
        attributeId:
          title: Attribute ID
          description: The ID of the refinement attribute.
          type: string
          maxLength: 256
          example: c_contentType
        label:
          title: Label
          description: The localized label of the refinement attribute.
          type: string
          maxLength: 4000
          example: Content Type
        values:
          title: Values
          description: The array of refinement values.
          type: array
          items:
            $ref: '#/components/schemas/ContentSearchRefinementValue'
      required:
        - attributeId
      type: object
    ContentSearchResult:
      allOf:
        - $ref: '#/components/schemas/PaginatedResultBase'
      properties:
        query:
          title: Query
          description: The query String that was searched for.
          type: string
          maxLength: 256
          example: banner
        hits:
          title: Content Hits
          description: The sorted array of search hits. Can be empty.
          type: array
          items:
            $ref: '#/components/schemas/Content'
        selectedRefinements:
          title: Selected Refinements
          description: Map of selected refinement attribute id/value(s) pairs. The sorting order is the same like in request URL.
          type: object
          additionalProperties:
            type: string
            maxLength: 256
            example: homepage-folder
          example:
            fdid: homepage-folder
            c_contentType: banner
        refinements:
          title: Refinements
          description: The sorted array of search refinements. Can be empty.
          type: array
          items:
            $ref: '#/components/schemas/ContentSearchRefinement'
      required:
        - hits
      type: object
    FolderId:
      maxLength: 256
      type: string
      example: homepage-folder
    ContentFolder:
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        id:
          maxLength: 256
          title: ID
          description: The id of the content folder.
          example: homepage-folder
          type: string
        parentFolderId:
          maxLength: 256
          title: Parent Folder ID
          description: The id of the parent content folder.
          example: root-folder
          type: string
        name:
          title: Name
          description: The localized content folder name.
          type: string
          maxLength: 4000
          example: Homepage Folder
        description:
          title: Description
          description: The localized content folder description.
          type: string
          maxLength: 4000
          example: Folder containing homepage content assets
        pageDescription:
          title: Page Description
          description: The localized content folder page description.
          type: string
          maxLength: 4000
          example: SEO description for homepage folder
        pageKeywords:
          title: Page Keywords
          description: The localized content folder page keywords.
          type: string
          maxLength: 4000
          example: homepage, main, landing
        pageTitle:
          title: Page Title
          description: The localized content folder page title.
          type: string
          maxLength: 4000
          example: Homepage Folder - My Store
        folders:
          title: Folders
          description: The array of content subfolders. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/ContentFolder'
      required:
        - id
      type: object
    ContentFolderResult:
      allOf:
        - $ref: '#/components/schemas/ResultBase'
      properties:
        data:
          title: Data
          description: List of content folders.
          type: array
          items:
            $ref: '#/components/schemas/ContentFolder'
      required:
        - data
      type: object
  parameters:
    organizationId:
      description: An identifier for the organization the request is being made by
      name: organizationId
      in: path
      required: true
      example: f_ecom_zzxy_prd
      schema:
        $ref: '#/components/schemas/OrganizationId'
    categoryId:
      name: categoryId
      in: query
      description: Category identifier that is used for searching the page assignment. Must be provided if no `productId` is provided.
      required: false
      schema:
        maxLength: 256
        type: string
        example: home-clearance
    productId:
      name: productId
      in: query
      description: Product identifier that is used for searching the page assignment. Must be provided if no `categoryId` is provided.
      required: false
      schema:
        maxLength: 100
        type: string
        example: iphone11
    aspectTypeId:
      name: aspectTypeId
      in: query
      description: Aspect type identifier that is used for searching the page assignment in conjunction with either the `productId` or `categoryId`.
      required: true
      schema:
        maxLength: 256
        type: string
        example: pdp
    aspectAttributes:
      name: aspectAttributes
      in: query
      description: A JSON representation of aspect attributes. Each aspect attribute is a key/value pair. Aspect attributes serve as a runtime parameter contract between caller (for example, this API or the DWScript API) and callee (the page). This parameter must not contain more than 256 characters after URL decoding.
      required: false
      schema:
        type: string
        maxLength: 256
        example: |-
          {
            "product" : "iphone11",
            "breadcrumbCategory" : "home-clearance"
          }
    parameters:
      name: parameters
      in: query
      description: A free-form definition of parameters that influences the page rendering according to its implementation. This parameter must not contain more than 256 characters after URL decoding.
      required: false
      schema:
        maxLength: 256
        type: string
        example: refine=color,size;currency=USD;showNavigation=false
    siteId:
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites.
      name: siteId
      in: query
      required: true
      examples:
        SiteId:
          value: RefArch
      schema:
        $ref: '#/components/schemas/SiteId'
    locale:
      description: A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.
      name: locale
      in: query
      examples:
        LanguageCountry:
          value: en-US
        CountryCode:
          value: US
      schema:
        $ref: '#/components/schemas/LocaleCode'
    pageId:
      name: pageId
      in: path
      description: Identifier for the requested page.
      required: true
      schema:
        maxLength: 256
        type: string
        example: homepage
    contentId:
      name: id
      in: path
      description: Identifier for the requested content asset.
      required: true
      schema:
        $ref: '#/components/schemas/ContentId'
    contentIds:
      name: ids
      in: query
      description: Comma-separated list of content asset identifiers to retrieve.
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ContentId'
        minItems: 1
        maxItems: 50
        example: homepage-banner,footer-content,sidebar-promo
    contentSearchQuery:
      name: q
      in: query
      description: The query phrase to search for content assets. For example, to search for content with "banner", type q=banner.
      required: false
      schema:
        maxLength: 50
        minLength: 1
        type: string
        example: banner
    contentSearchRefine:
      name: refine
      in: query
      description: "Parameter that represents a refinement attribute/value(s) pair. Refinement attribute ID and value(s) are separated by '='. Multiple values are supported by a subset of refinement attributes and can be provided by separating them using a pipe (URL encoded = \"|\"). Value ranges can be specified like this: refine=foo=(100..500). \nMultiple refine parameters can be provided by adding an underscore in combination with an integer counter right behind the parameter name and a counter range 1..9. I.e. refine_1=c_refinementType=type1|type2|type3.\n\nThe following system refinement attribute IDs are supported:\n- `fdid`: Allows refinement per single content folder ID. Multiple folder IDs are not supported."
      required: false
      style: form
      explode: true
      schema:
        type: string
        maxLength: 256
        example: fdid=homepage-folder
    contentSearchSort:
      name: sort
      in: query
      description: |-
        Parameter that represents a sorting attribute/value(s) pair. Sorting attribute ID and value are separated by '='. The value describes the sort direction. Possible values are 'asc' and 'desc', for ascending or descending sort direction. I.e. sort=c_myAttribute=desc.

        Precondition: You have to select your sorting attributes in Business Manager > YourSite > Search Indexes > Content Index > Sorting Attributes.
      required: false
      style: form
      explode: true
      schema:
        type: string
        maxLength: 256
        example: name=asc
    folderId:
      name: id
      in: path
      description: Identifier for the requested content folder.
      required: true
      schema:
        $ref: '#/components/schemas/FolderId'
    levels:
      name: levels
      in: query
      description: Specifies how many levels of nested subfolders you want the server to return. The default value is 1. Valid values are 0, 1, or 2.
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 2
        default: 1
        example: 1
    folderIds:
      name: ids
      in: query
      style: form
      explode: false
      description: Comma-separated list of content folder identifiers.
      required: true
      schema:
        type: array
        items:
          allOf:
            - $ref: '#/components/schemas/FolderId'
        minItems: 1
        maxItems: 50
        example: homepage-folder,category-folder,product-folder
  examples:
    PageResult:
      value:
        data:
          - id: homePpage
            typeId: storePage
            aspectTypeId: pdpAspect
            name: Homepage
            description: Home page of the storefront.
            pageTitle: Homepage - My Shop
            pageDescription: Get started shopping
            pageKeywords: fashion, my shop
            data:
              thumbnail: myshop.jpg
            custom:
              thumbnail_full: http://static.myshop.com/myshop.jpg
            regions:
              - id: header
                components:
                  - id: 2192f5b9aac0f2af2385f6f6b7
                    typeId: commerce_assets.banner
                    data:
                      title: Products On Sale
                      bannerImage: sale/topsellerPromo.jpg
                    custom:
                      thumbnail_full: http://static.myshop.com/sale/topsellerPromo.jpg
              - id: main
                components:
                  - id: 5c5ebbcd2aee1a67af519c83b5
                    typeId: commerce_assets.carousel
                    data:
                      title: Topseller
                      category: topseller
                    custom:
                      detailUrl: www.myshop.com/topseller
                    regions:
                      - id: tiles
                        components:
                          - id: d98a30dfe93715e3e6fc22a329
                            typeId: commerce_assets.productTile
                            data:
                              product: iphone6
                          - id: 43aa39896afb9292308181ce14
                            typeId: commerce_assets.productTile
                            data:
                              product: iphone7
          - id: detailpage
            typeId: storePage
            name: storepage
            description: A Store page
            pageTitle: A Store
            pageDescription: Buy in store
            pageKeywords: fashion, my shop, store
            data:
              thumbnail: mystore.jpg
    BusinessObjectIDInvalid:
      value:
        title: Business Object ID Invalid
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/business-object-id-invalid
        detail: At least one provided business object identifier was invalid. This means either none was provided at all or exclusiveness of multiple identifiers wasn't honored or the referenced business object didn't exist.
    AspectTypeNotFound:
      value:
        title: Aspect Type Not Found
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/aspect-type-not-found
        detail: No aspect type with ID 'pdp' was found in site 'RefArch'.
    Page:
      value:
        id: homepage
        typeId: storePage
        aspectTypeId: pdpAspect
        name: Homepage
        description: Home page of the storefront.
        pageTitle: Homepage - My Shop
        pageDescription: Get started shopping
        pageKeywords: fashion, my shop
        data:
          thumbnail: myshop.jpg
        custom:
          thumbnail_full: http://static.myshop.com/myshop.jpg
        regions:
          - id: header
            components:
              - id: 375b9107b067902827083772f9
                typeId: commerce_assets.banner
                data:
                  title: Products On Sale
                  bannerImage: sale/topsellerPromo.jpg
                custom:
                  thumbnail_full: http://static.myshop.com/sale/topsellerPromo.jpg
          - id: main
            components:
              - id: be1f331b92d8ad7e38e440e35d
                typeId: commerce_assets.carousel
                data:
                  title: Topseller
                  category: topseller
                custom:
                  detailUrl: www.myshop.com/topseller
                regions:
                  - id: tiles
                    components:
                      - id: 45af07459684e6db78990c5d05
                        typeId: commerce_assets.productTile
                        data:
                          product: iphone6
                      - id: df6e33766d90e7e205d109aa2f
                        typeId: commerce_assets.productTile
                        data:
                          product: iphone7
    AspectAttributeInvalid:
      value:
        title: Aspect Attribute Invalid
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/aspect-attribute-invalid
        detail: 'Aspect attribute value "5555" does not fulfill its respective definition {"id" : "foobar", "type" : "string","required" : "false"}'
    PageNotFound:
      value:
        title: Page Not Found
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/page-not-found
        detail: No visible page with ID 'homepage' was found in site 'RefArch'.
    Content:
      value:
        id: homepage-banner
        name: Homepage Banner
        description: Main promotional banner for the homepage
        pageTitle: Homepage Banner - My Shop
        pageDescription: Discover amazing products at great prices
        pageKeywords: banner, promotion, homepage
    ContentNotFound:
      value:
        title: Content Asset Not Found
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/content-not-found
        detail: No visible content asset with ID 'homepage-banner' was found in site 'RefArch'.
    ContentResult:
      value:
        data:
          - id: homepage-banner
            name: Homepage Banner
            description: Main promotional banner for the homepage
            pageTitle: Homepage Banner - My Shop
            pageDescription: Discover amazing products at great prices
            pageKeywords: banner, promotion, homepage
          - id: footer-content
            name: Footer Content
            description: Footer information and links
            pageTitle: Footer - My Shop
            pageDescription: Footer content with links and copyright information
            pageKeywords: footer, links, copyright
        total: 2
        limit: 2
    GetContentsBadRequest:
      value:
        title: Bad Request
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/bad-request
        detail: '''ids'' violates the value constraint. The expected value is between ''(0..50)''.'
        parameter: ids
        expected: (0..50)
    ContentSearchResult:
      value:
        query: banner
        hits:
          - id: homepage-banner
            name: Homepage Banner
            description: Main promotional banner for the homepage
            pageTitle: Homepage Banner - My Shop
            pageDescription: Discover amazing products at great prices
            pageKeywords: banner, promotion, homepage
          - id: sidebar-banner
            name: Sidebar Banner
            description: Promotional banner for the sidebar
            pageTitle: Sidebar Banner - My Shop
            pageDescription: Check out our special offers
            pageKeywords: banner, sidebar, promotion
        selectedRefinements:
          fdid: homepage-folder
          c_contentType: banner
        refinements:
          - attributeId: c_contentType
            label: Content Type
            values:
              - value: banner
                label: Banner
                hitCount: 15
              - value: text
                label: Text Content
                hitCount: 8
          - attributeId: fdid
            label: Content Folder
            values:
              - value: homepage-folder
                label: Homepage
                hitCount: 5
              - value: promotions-folder
                label: Promotions
                hitCount: 10
        total: 2
        limit: 25
        offset: 0
    ContentSearchBadRequest:
      value:
        title: Bad Request
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/bad-request
        detail: 'Invalid refinement parameter format. Expected format: ''attribute=value''.'
        parameter: refine
    ContentFolder:
      value:
        id: homepage-folder
        parentFolderId: root-folder
        name: Homepage Folder
        description: Folder containing homepage content assets
        pageTitle: Homepage Folder - My Store
        pageDescription: SEO description for homepage folder
        pageKeywords: homepage, main, landing
        folders:
          - id: hero-section
            parentFolderId: homepage-folder
            name: Hero Section
            description: Hero section content folder
            folders: []
          - id: featured-products
            parentFolderId: homepage-folder
            name: Featured Products
            description: Featured products content folder
            folders: []
        c_customAttribute: customValue
    InvalidLevelsParameter:
      value:
        title: Bad Request
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/bad-request
        detail: '''levels'' violates the value constraint. The expected value is between ''(0..2)''.'
    UnauthorizedExample:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/unauthorized
        title: Unauthorized
        detail: Your access token is invalid or expired and canâ€™t be used to identify a user.
    ForbiddenExample:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/forbidden
        title: Forbidden
        detail: Your access token is valid, but you donâ€™t have the required permissions to access the resource.
    ContentFolderNotFound:
      value:
        title: Folder Not Found
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/folder-not-found
        detail: No online content folder with ID 'non-existent-folder' for site 'RefArch' could be found.
    ContentFolderResult:
      value:
        limit: 2
        total: 10
        data:
          - id: homepage-folder
            parentFolderId: root-folder
            name: Homepage Folder
            description: Folder containing homepage content assets
            pageTitle: Homepage Folder - My Store
            pageDescription: SEO description for homepage folder
            pageKeywords: homepage, main, landing
            folders:
              - id: hero-section
                parentFolderId: homepage-folder
                name: Hero Section
                description: Hero section content folder
                folders: []
              - id: featured-products
                parentFolderId: homepage-folder
                name: Featured Products
                description: Featured products content folder
                folders: []
            c_customAttribute: customValue
          - id: category-folder
            parentFolderId: root-folder
            name: Category Folder
            description: Folder containing category content assets
            pageTitle: Category Folder - My Store
            pageDescription: SEO description for category folder
            pageKeywords: category, products, listing
            folders: []
  responses:
    401unauthorized:
      description: Your access token is invalid or expired and canâ€™t be used to identify a user.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/UnauthorizedExample'
    403forbidden:
      description: Forbidden. Your access token is valid, but you donâ€™t have the required permissions to access the resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            ForbiddenExample:
              $ref: '#/components/examples/ForbiddenExample'
