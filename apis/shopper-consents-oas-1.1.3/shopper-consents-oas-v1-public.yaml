openapi: 3.0.3
info:
  x-api-type: Shopper
  x-api-family: Shopper
  title: Shopper Consents
  version: 1.1.3
  description: "[Download API specification](https://developer.salesforce.com/static/commercecloud/commerce-api/shopper-consents/shopper-consents-oas-v1-public.yaml)\n\n# API Overview\n\nThe Shopper Consent API offers a centralized method for managing shopper consent. With this API, shoppers can view and update subscription preferences for marketing communications across various channels. This API controls how and where shoppers receive marketing messages while ensuring compliance with privacy regulations.\n\n## Key Features\n\n- **Retrieve communication subscriptions**: Retrieve relevant communication subscription options with rich display information.\n    - Communication subscription options can be filtered by one or more qualifying tags.\n    - Use the `expand` parameter to conditionally include subscription status.\n- **Update individual subscription consent**: Update consent status for a single subscription with simple request/response pattern.\n- **Bulk subscription updates**: Efficiently manage multiple subscription preferences with a single request.\n    - Update 1-50 subscriptions per bulk request.\n    - Partial success handling with detailed error reporting for failed updates.\n\n## Authentication & Authorization\n\nThe Shopper Consent API requires a JSON Web Token acquired using the Shopper Consent endpoint:\n```\nhttps://{{shortcode}}.api.commercecloud.salesforce.com/customer/shopper-customers/v1/organizations/{{organizationId}}/customers/actions/login\n```\nYou must include the relevant scope(s) in the client ID used to generate the SLAS token.\n\n### Required Scopes\n\n- `sfcc.shopper-consents`: Required for reading communication subscription data (GET operations).\n- `sfcc.shopper-consents.rw`: Required for creating and modifying communication subscription consent data (POST operations).\n\n## Data Model\n\n### Subscriptions\nSubscriptions represent a shopper's consent to receive specific types of marketing communications. Each subscription includes:\n\n- **Subscription Id**: Descriptive identifier\n- **Channels**: Array of communication methods - Email, SMS, or WhatsApp\n- **Consent Type**: Marketing or legal subscription classification\n- **Consent Required**: Whether the subscription is mandatory for the shopper\n- **Default Status**: Default opt-in or opt-out behavior\n- **Consent Status**: Array of status entries for each channel showing current opt-in or opt-out status (conditionally returned based on expand parameter)\n- **Rich Display Information**: \n  - Title: Simple localized string for subscription name\n  - Subtitle: Simple localized string with HTML markup support for descriptions\n  - Localized content determined by the locale parameter\n- **Tags**: Categorical tags indicating where the subscription option can appear (defaults to empty array, max 10 tags)\n\n### Channels\nChannels define the communication methods available for a subscription:\n- `email`: Email communications\n- `sms`: SMS/text messages\n- `whatsapp`: WhatsApp messaging\n\n### Tags\nTags indicate where subscription options are displayed in your shopper experience. Tags are also accepted as optional filtering parameters in the retrieval of shopper consent subscriptions. For example:\n- `homepage_banner`: Main website homepage\n- `registration`: Shopper registration form\n- `checkout`: Checkout flow\n- `user_profile`: User profile management section\n\n### Default Values\nThe API provides sensible defaults for optional fields to simplify integration:\n- **Consent Type**: Defaults to \"marketing\" for marketing communications\n- **Consent Required**: Defaults to false, making subscriptions optional by default\n- **Default Status**: Defaults to \"opt_out\" to respect privacy-first principles\n- **Tags**: Defaults to an empty array when not specified\n\n## Advanced Features\n\n### Expand Parameter\nThe `expand` parameter provides conditional field inclusion:\n- `expand=[]` (default): Returns basic subscription information\n- `expand=[\"consentStatus\"]`: Include consent status information in the response\n- Future expansion may include additional fields\n\n### Single Subscription Updates\nUpdate consent for one subscription at a time:\n- **Endpoint**: `POST /organizations/{organizationId}/subscriptions`\n- **Request**: Requires subscriptionId, contactPointValue, channel, and status\n- **Response**: Returns the same parameters on success (HTTP 200)\n- **Use Case**: Ideal for real-time updates as shoppers interact with individual preferences\n\n### Bulk Operations\nEfficiently manage multiple subscription preferences in a single request:\n- **Endpoint**: `POST /organizations/{organizationId}/subscriptions/actions/bulk`\n- **Request Limits**: 1-50 subscriptions per bulk request\n- **Response Handling**: \n  - HTTP 200: All updates successful\n  - HTTP 207 Multi-Status: Partial success with detailed error reporting\n  - HTTP 400: Request validation failure\n- **Error Isolation**: Failed updates don't affect successful ones\n- **Individual Results**: Each subscription update returns:\n  - Original input parameters (subscriptionId, contactPointValue, channel, status)\n  - Success/failure status\n  - Detailed error information for failed updates\n  - No full subscription objects returned for improved performance\n\n## Error Handling\n\nThe API uses standard HTTP status codes and returns detailed error information to help with troubleshooting:\n\n- `200 OK`: Successful operation (single or bulk with all successes)\n- `207 Multi-Status`: Bulk operation with partial success\n- `400 Bad Request`: Invalid request format, missing required fields, or markup validation errors\n\n## Best Practices\n\n### User Experience\n- Make it easy for shoppers to update their preferences.\n- Respect shopper choices immediately.\n\n### Implementation Guidelines\n- Implement clear and prominent unsubscribe mechanisms.\n- Validate HTML markup content to prevent XSS vulnerabilities.\n- Handle partial success scenarios gracefully in bulk operations.\n\n### Performance Considerations\n- Use single subscription updates for real-time, interactive preference changes.\n- Use bulk operations when updating multiple subscriptions to reduce API calls and improve performance.\n- Only request status information when needed using the expand parameter to reduce latency."
servers:
  - url: https://{shortCode}.api.commercecloud.salesforce.com/shopper/shopper-consents/v1
    variables:
      shortCode:
        default: shortCode
paths:
  /organizations/{organizationId}/subscriptions:
    get:
      summary: Get shopper consent preferences
      description: "Retrieve all subscription preferences for the shopper (authenticated or guest).\n\nUse the 'expand' parameter to include additional fields in the response:\n- expand=[\"consentStatus\"]: Include subscription status information\n- expand=[]: Default behavior, excludes status for privacy and performance\n\nThe expand parameter provides privacy benefits by not exposing sensitive status \ninformation unless explicitly requested.\n"
      operationId: getSubscriptions
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/tags'
        - $ref: '#/components/parameters/expand'
      responses:
        '200':
          description: |
            Successfully retrieved subscription preferences.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentSubscriptionResponse'
              examples:
                ConsentSubscriptionResponseAuthenticated:
                  $ref: '#/components/examples/ConsentSubscriptionResponseAuthenticated'
                ConsentSubscriptionResponseAuthenticatedExpanded:
                  $ref: '#/components/examples/ConsentSubscriptionResponseAuthenticatedExpanded'
                ConsentSubscriptionResponseGuest:
                  $ref: '#/components/examples/ConsentSubscriptionResponseGuest'
        '400':
          description: |
            Error retrieving subscription preferences
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ConsentSubscriptionError:
                  $ref: '#/components/examples/ConsentSubscriptionError'
      security:
        - ShopperToken:
            - sfcc.shopper-consents
            - sfcc.shopper-consents.rw
    post:
      summary: Update shopper subscription preference
      description: Update the consent status for a single subscription.
      operationId: updateSubscription
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentSubscriptionRequest'
            examples:
              ConsentSubscriptionUpdateRequest:
                $ref: '#/components/examples/ConsentSubscriptionUpdateRequest'
      responses:
        '200':
          description: |
            Subscription update completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentSubscriptionUpdateResponse'
              examples:
                ConsentSubscriptionUpdateResponseSuccess:
                  $ref: '#/components/examples/ConsentSubscriptionUpdateResponseSuccess'
        '400':
          description: |
            Error with request format or validation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ConsentSubscriptionUpdateError:
                  $ref: '#/components/examples/ConsentSubscriptionUpdateError'
      security:
        - ShopperToken:
            - sfcc.shopper-consents.rw
  /organizations/{organizationId}/subscriptions/actions/bulk:
    post:
      summary: Update shopper subscription preferences
      description: Update the consent status for multiple subscriptions in a single bulk request. Supports 1-50 subscription updates per request with partial success handling.
      operationId: updateSubscriptions
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentSubscriptionBulkRequest'
            examples:
              ConsentSubscriptionBulkUpdateRequest:
                $ref: '#/components/examples/ConsentSubscriptionBulkUpdateRequest'
      responses:
        '200':
          description: |
            All subscription updates completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentSubscriptionBulkResponse'
              examples:
                ConsentSubscriptionBulkUpdateResponseSuccess:
                  $ref: '#/components/examples/ConsentSubscriptionBulkUpdateResponseSuccess'
        '207':
          description: |
            Partial success - some subscription updates succeeded, others failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentSubscriptionBulkResponse'
              examples:
                ConsentSubscriptionBulkUpdateResponsePartial:
                  $ref: '#/components/examples/ConsentSubscriptionBulkUpdateResponsePartial'
        '400':
          description: |
            Error with bulk request format or validation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BulkValidationError:
                  $ref: '#/components/examples/BulkValidationError'
      security:
        - ShopperToken:
            - sfcc.shopper-consents.rw
components:
  securitySchemes:
    ShopperToken:
      type: oauth2
      description: "ShopperToken authentication follows the authorization code grant flow, as defined by the OAuth 2.1 standard. Depending on the type of OAuth client (public or private), this authorization flow has further requirements. \nFor a detailed description of the authorization flow, see the [SLAS overview](https://developer.salesforce.com/docs/commerce/commerce-api/references?meta=shopper-login:Summary).\nA shopper token allows you to access the Shopper API endpoints B2C Commerce API. These endpoints can be used to build headless storefronts and other applications.\nThe `ShopperToken` security scheme is a parent of other security schemes, such as `ShopperTokenTsob`. A Shopper API endpoint can require a specific child scheme (`ShopperTokenTsob`, for example) that cannot be accessed with a regular shopper token.\n"
      flows:
        clientCredentials:
          tokenUrl: https://{shortCode}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-consents: Allows read operations on shopper consents
            sfcc.shopper-consents.rw: Allows read/write operations on shopper consents
        authorizationCode:
          authorizationUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/authorize
          tokenUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-consents: Allows read operations on shopper consents
            sfcc.shopper-consents.rw: Allows read/write operations on shopper consents
  schemas:
    OrganizationId:
      description: An identifier for the organization the request is being made by
      example: f_ecom_zzxy_prd
      type: string
      minLength: 1
      maxLength: 32
    SiteId:
      minLength: 1
      maxLength: 32
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites
      example: RefArch
      type: string
    LanguageCountry:
      pattern: ^[a-z][a-z]-[A-Z][A-Z]$
      description: A concatenated version of the standard Language and Country codes, combined with a hyphen '`-`'.
      example: en-US
      type: string
    LanguageCode:
      pattern: ^[a-z][a-z]$
      description: A two letter lowercase language code conforming to the [ISO 639-1](https://www.iso.org/iso-639-language-codes.html) standard. Additionally, this may be used to submit requests with the header parameter `Accept-Language`, following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766).
      example: en
      type: string
    DefaultFallback:
      default: default
      description: A specialized value indicating the system default values for locales.
      example: default
      enum:
        - default
      type: string
    LocaleCode:
      description: A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.
      oneOf:
        - $ref: '#/components/schemas/LanguageCountry'
        - $ref: '#/components/schemas/LanguageCode'
        - $ref: '#/components/schemas/DefaultFallback'
    Tag:
      type: string
      description: Filter criteria for consent subscriptions
      minLength: 1
      maxLength: 256
      example: homepage_banner
    SubscriptionId:
      type: string
      description: Identifier for the communication subscription
      minLength: 1
      maxLength: 255
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      example: weekly-newsletter
    ChannelType:
      type: string
      enum:
        - email
        - sms
        - whatsapp
      example: email
    SubscriptionChannel:
      type: array
      items:
        $ref: '#/components/schemas/ChannelType'
      minItems: 1
      maxItems: 3
      uniqueItems: true
      example:
        - email
        - sms
    ContactPointValue:
      type: string
      minLength: 3
      maxLength: 320
      description: |
        The customer's contact point value, polymorphic based on the channel type as below:
        - `sms` - Subject's phone number in E.164 format, ex: `+1 424 535 3546`
        - `email` - Subject's email address in RFC 5321 & RFC 5322 format, ex: `jack.sparrow@salesforce.com`
      example: jack.sparrow@salesforce.com
    ConsentStatus:
      type: string
      description: The consent status of the subscription as supplied or recorded by this system
      enum:
        - opt_in
        - opt_out
      example: opt_in
    SubscriptionStatusEntry:
      type: object
      description: Individual subscription status entry for a specific channel
      required:
        - channel
        - contactPointValue
        - status
      properties:
        channel:
          $ref: '#/components/schemas/ChannelType'
        contactPointValue:
          $ref: '#/components/schemas/ContactPointValue'
        status:
          $ref: '#/components/schemas/ConsentStatus'
      example:
        channel: email
        contactPointValue: john.doe@example.com
        status: opt_in
      additionalProperties: false
    SubscriptionStatusArray:
      type: array
      description: Array of subscription status entries for different channels
      items:
        $ref: '#/components/schemas/SubscriptionStatusEntry'
      minItems: 0
      maxItems: 10
      example:
        - channel: email
          contactPointValue: john.doe@example.com
          status: opt_in
        - channel: sms
          contactPointValue: +1 555 123 4567
          status: opt_out
    SubscriptionTitle:
      type: string
      description: The localized title of the subscription for shopper displays
      minLength: 1
      maxLength: 255
      example: Weekly Newsletter
    SubscriptionSubtitle:
      type: string
      description: The localized subtitle of the subscription for shopper displays, may contain HTML markup
      minLength: 1
      maxLength: 2000
      example: Stay informed about new features. <a href="https://example.com/features">Learn more</a>
    ConsentSubscription:
      type: object
      required:
        - subscriptionId
        - channels
      properties:
        subscriptionId:
          $ref: '#/components/schemas/SubscriptionId'
        channels:
          $ref: '#/components/schemas/SubscriptionChannel'
        consentStatus:
          $ref: '#/components/schemas/SubscriptionStatusArray'
          description: "Subscription status information across different channels. This field is only included in the response \nwhen the 'expand' parameter contains \"consentStatus\". For privacy and performance \nreasons, status is not returned by default.\n"
        title:
          $ref: '#/components/schemas/SubscriptionTitle'
        subtitle:
          $ref: '#/components/schemas/SubscriptionSubtitle'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 10
          default: []
          example:
            - homepage_banner
            - user_profile
        consentType:
          type: string
          enum:
            - marketing
            - legal
          description: Type of consent subscription
          default: marketing
          example: marketing
        consentRequired:
          type: boolean
          description: Whether this subscription is mandatory for the user
          default: false
          example: false
        defaultStatus:
          type: string
          enum:
            - opt_in
            - opt_out
          description: Default consent status for this subscription
          default: opt_out
          example: opt_out
    ConsentSubscriptionResponse:
      type: object
      description: Collection wrapper of consent subscriptions
      required:
        - data
      properties:
        data:
          type: array
          minItems: 0
          maxItems: 50
          items:
            $ref: '#/components/schemas/ConsentSubscription'
    ErrorResponse:
      type: object
      additionalProperties: true
      properties:
        title:
          description: "A short, human-readable summary of the problem\ntype.  It will not change from occurrence to occurrence of the \nproblem, except for purposes of localization\n"
          type: string
          maxLength: 256
          example: You do not have enough credit
        type:
          description: |
            A URI reference [RFC3986] that identifies the
            problem type.  This specification encourages that, when
            dereferenced, it provide human-readable documentation for the
            problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
            this member is not present, its value is assumed to be
            "about:blank". It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: NotEnoughMoney
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          example: Your current balance is 30, but that costs 50
        instance:
          description: |
            A URI reference that identifies the specific
            occurrence of the problem.  It may or may not yield further
            information if dereferenced.  It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: /account/12345/msgs/abc
      required:
        - title
        - type
        - detail
    ConsentSubscriptionRequest:
      type: object
      description: Consent subscription update request
      required:
        - subscriptionId
        - contactPointValue
        - channel
        - status
      properties:
        subscriptionId:
          $ref: '#/components/schemas/SubscriptionId'
        contactPointValue:
          $ref: '#/components/schemas/ContactPointValue'
        channel:
          $ref: '#/components/schemas/ChannelType'
        status:
          $ref: '#/components/schemas/ConsentStatus'
    ConsentSubscriptionUpdateResponse:
      type: object
      description: Single subscription update response
      required:
        - subscriptionId
        - contactPointValue
        - channel
        - status
      properties:
        subscriptionId:
          $ref: '#/components/schemas/SubscriptionId'
        channel:
          $ref: '#/components/schemas/ChannelType'
        contactPointValue:
          $ref: '#/components/schemas/ContactPointValue'
        status:
          $ref: '#/components/schemas/ConsentStatus'
    ConsentSubscriptionBulkRequest:
      type: object
      description: Bulk request for updating multiple consent subscriptions
      required:
        - subscriptions
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/ConsentSubscriptionRequest'
          minItems: 1
          maxItems: 50
          description: Array of subscription consent updates to process
          example:
            - subscriptionId: weekly-newsletter
              channel: email
              contactPointValue: john.doe@example.com
              status: opt_in
            - subscriptionId: sms-alerts
              channel: sms
              contactPointValue: +1 555 123 4567
              status: opt_out
    ConsentSubscriptionError:
      type: object
      description: Error details for failed subscription updates
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code indicating the type of failure
          maxLength: 100
          example: INVALID_CONTACT_POINT
        message:
          type: string
          description: Human-readable error message
          maxLength: 500
          example: Invalid email address format
        details:
          type: object
          description: Additional error details
          example:
            field: contactPointValue
            provided: invalid-email
          additionalProperties: false
    ConsentSubscriptionResult:
      type: object
      description: Individual subscription update result with input parameters
      required:
        - subscriptionId
        - contactPointValue
        - channel
        - status
        - success
      properties:
        subscriptionId:
          $ref: '#/components/schemas/SubscriptionId'
        channel:
          $ref: '#/components/schemas/ChannelType'
        contactPointValue:
          $ref: '#/components/schemas/ContactPointValue'
        status:
          $ref: '#/components/schemas/ConsentStatus'
        success:
          type: boolean
          description: Whether the subscription update was successful
          example: true
        error:
          $ref: '#/components/schemas/ConsentSubscriptionError'
          description: Error details (present when success is false)
    ConsentSubscriptionBulkResponse:
      type: object
      description: Bulk response with results for each subscription update request
      required:
        - results
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConsentSubscriptionResult'
          description: Results for each subscription update request
  parameters:
    organizationId:
      description: An identifier for the organization the request is being made by
      name: organizationId
      in: path
      required: true
      example: f_ecom_zzxy_prd
      schema:
        $ref: '#/components/schemas/OrganizationId'
    siteId:
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites.
      name: siteId
      in: query
      required: true
      examples:
        SiteId:
          value: RefArch
      schema:
        $ref: '#/components/schemas/SiteId'
    locale:
      description: A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.
      name: locale
      in: query
      examples:
        LanguageCountry:
          value: en-US
        CountryCode:
          value: US
      schema:
        $ref: '#/components/schemas/LocaleCode'
    tags:
      description: Optional parameter of 0 or more query string values which act as a filtering criteria. Multiple values are treated with `OR` logic, and absence of a value indicates no filtering by tag is desired.
      name: tags
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Tag'
        minItems: 0
        maxItems: 10
      style: form
      explode: false
      examples:
        one:
          summary: One tag filter
          value:
            - homepage_banner
        multiple:
          summary: Multiple tag filters (ORs)
          value:
            - homepage_banner
            - user_profile
            - checkout
            - registration
    expand:
      description: "Optional parameter to expand response with additional fields. \nAccepts an array of field names to include in the response.\nCurrently supports:\n- \"consentStatus\": Include consent status information in the response\n\nFuture expansions may include additional fields.\n"
      name: expand
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - consentStatus
          example: consentStatus
        uniqueItems: true
        default: []
        minItems: 0
        maxItems: 10
      style: form
      explode: false
      examples:
        empty:
          summary: No expansion (default behavior)
          value: []
        consentStatus:
          summary: Include status information
          value:
            - consentStatus
  examples:
    ConsentSubscriptionResponseAuthenticated:
      summary: AUTHENTICATED shopper's available consent subscriptions
      value:
        data:
          - subscriptionId: weekly-newsletter
            channels:
              - email
              - whatsapp
            title: Weekly Newsletter
            subtitle: Get our weekly newsletter with the latest updates. <a href="https://example.com/newsletter">Learn more</a>
            consentType: marketing
            consentRequired: false
            defaultStatus: opt_out
            tags:
              - homepage_banner
              - user_profile
          - subscriptionId: promotional-offers
            channels:
              - sms
            title: Promotional Offers
            subtitle: Receive special promotional offers. <a href="https://example.com/offers">View terms</a>
            consentType: marketing
            consentRequired: false
            defaultStatus: opt_out
            tags:
              - checkout
    ConsentSubscriptionResponseAuthenticatedExpanded:
      summary: AUTHENTICATED shopper's consent subscriptions with expand=["consentStatus"]
      value:
        data:
          - subscriptionId: weekly-newsletter
            channels:
              - email
              - whatsapp
            consentStatus:
              - channel: email
                contactPointValue: customer@example.com
                status: opt_in
              - channel: whatsapp
                contactPointValue: +1 555 123 4567
                status: opt_out
            title: Weekly Newsletter
            subtitle: Get our weekly newsletter with the latest updates. <a href="https://example.com/newsletter">Learn more</a>
            consentType: marketing
            consentRequired: false
            defaultStatus: opt_out
            tags:
              - homepage_banner
              - user_profile
          - subscriptionId: promotional-offers
            channels:
              - sms
            consentStatus:
              - channel: sms
                contactPointValue: +1 555 987 6543
                status: opt_out
            title: Promotional Offers
            subtitle: Receive special promotional offers. <a href="https://example.com/offers">View terms</a>
            consentType: marketing
            consentRequired: false
            defaultStatus: opt_out
            tags:
              - checkout
              - user_profile
          - subscriptionId: privacy-policy-updates
            channels:
              - email
            consentStatus:
              - channel: email
                contactPointValue: customer@example.com
                status: opt_in
            title: Privacy Policy Updates
            subtitle: Important updates to our privacy policy. <a href="https://example.com/privacy">Read policy</a>
            consentType: legal
            consentRequired: true
            defaultStatus: opt_in
            tags:
              - registration
    ConsentSubscriptionResponseGuest:
      summary: GUEST shopper's available consent subscriptions
      value:
        data:
          - subscriptionId: weekly-newsletter
            channels:
              - email
              - whatsapp
            title: Weekly Newsletter
            subtitle: Get our weekly newsletter with the latest updates. <a href="https://example.com/newsletter">Learn more</a>
            consentType: marketing
            consentRequired: false
            defaultStatus: opt_out
            tags:
              - homepage_banner
              - user_profile
          - subscriptionId: promotional-offers
            channels:
              - sms
            title: Promotional Offers
            subtitle: Receive special promotional offers. <a href="https://example.com/offers">View terms</a>
            consentType: marketing
            consentRequired: false
            defaultStatus: opt_out
            tags:
              - checkout
    ConsentSubscriptionError:
      value:
        title: Error Retrieving Consent Subscription
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/bad-request
        detail: Error retrieving consent subscription.
    ConsentSubscriptionUpdateRequest:
      summary: Single subscription update request
      value:
        subscriptionId: weekly-newsletter
        contactPointValue: john.doe@example.com
        channel: email
        status: opt_in
    ConsentSubscriptionUpdateResponseSuccess:
      summary: Single subscription update successful (200 response)
      value:
        subscriptionId: weekly-newsletter
        contactPointValue: john.doe@example.com
        channel: email
        status: opt_in
    ConsentSubscriptionUpdateError:
      value:
        title: Error Updating Consent Subscription
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/validation
        detail: Consent subscription could not be updated.
    ConsentSubscriptionBulkUpdateRequest:
      summary: Bulk subscription update request
      value:
        subscriptions:
          - subscriptionId: weekly-newsletter
            contactPointValue: john.doe@example.com
            channel: email
            status: opt_in
          - subscriptionId: sms-alerts
            contactPointValue: +1 555 123 4567
            channel: sms
            status: opt_out
    ConsentSubscriptionBulkUpdateResponseSuccess:
      summary: All subscription updates successful (200 response)
      value:
        results:
          - subscriptionId: weekly-newsletter
            contactPointValue: john.doe@example.com
            channel: email
            status: opt_in
            success: true
          - subscriptionId: sms-alerts
            contactPointValue: +1 555 123 4567
            channel: sms
            status: opt_out
            success: true
    ConsentSubscriptionBulkUpdateResponsePartial:
      summary: Partial success - some updates failed (207 response)
      value:
        results:
          - subscriptionId: weekly-newsletter
            contactPointValue: john.doe@example.com
            channel: email
            status: opt_in
            success: true
          - subscriptionId: sms-alerts
            contactPointValue: invalid-phone
            channel: sms
            status: opt_out
            success: false
            error:
              code: INVALID_CONTACT_POINT
              message: Invalid phone number format
              details:
                field: contactPointValue
                provided: invalid-phone
    BulkValidationError:
      value:
        title: Bulk Request Validation Error
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/validation
        detail: One or more validation errors occurred in the bulk request.
        instance: /organizations/f_ecom_zzrf_001/subscriptions
